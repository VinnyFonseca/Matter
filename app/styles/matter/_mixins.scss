@mixin fontface($family, $filename) {
	@font-face {
		font-family: $family;
		src: url("../fonts/" + $filename + ".eot");
		src: url("../fonts/" + $filename + ".eot#iefix") format("embedded-opentype"),
			 url("../fonts/" + $filename + ".woff") format("woff"),
			 url("../fonts/" + $filename + ".ttf") format("truetype"),
			 url("../fonts/" + $filename + ".svg#" + $filename) format("svg");
		font: {
			style: normal;
			weight: normal;
		};
	}
}

@mixin font-size($fsz) {
	font-size: $fsz + px;
	font-size: ($fsz / 10) + rem;
}


@mixin linear-gradient($start: #f1f1f1, $from: 0%, $stop: #d9d9d9, $to: 100%) {
	background: $start;
	background: -webkit-gradient(linear, to right bottom, to left bottom, from($start), to($stop));
	background: -moz-gradient(to right, $start $from, $stop $to);
	background: -webkit-linear-gradient(to right, $start $from, $stop $to);
	background: -moz-linear-gradient(to right, $start $from, $stop $to);
	background: -ms-linear-gradient(to right, $start $from, $stop $to);
	background: -o-linear-gradient(to right, $start $from, $stop $to);
	background: linear-gradient(to right, $start $from, $stop $to);
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start)}', endColorstr='#{ie-hex-str($stop)}', GradientType=1);
}


@mixin svgColor($color) {
	fill: $color;
	path: $color;
	line: $color;
	stroke: none !important;

	path,
	polygon,
	rect {
		fill: $color;
		path: $color;
		line: $color;
		stroke: none !important;
	}
}


@mixin keyframes($name) {
	@-webkit-keyframes #{$name} {
		@content;
	}
	@-moz-keyframes #{$name} {
		@content;
	}
	@-ms-keyframes #{$name} {
		@content;
	}
	@keyframes #{$name} {
		@content;
	}
}